"""


Given an integer x, return true if x is a 

palindrome
, and false otherwise.
 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1


"""
class Solution(object):
    def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        
        isNegative = None
        
        if x < 0:
            isNegative = True
            return False    
        else:
            isNegative = False
            
        #take only the absolute value of x
        x = abs(x)
        x_str = str(x)
        
        #have two pointers
        #one starting from 0
        #the other one starting from len(x_str) - 1
        i = 0
        j = len(x_str) - 1
        
        while (i < j):
            
            if (x_str[i] != x_str[j]):
                return False
            else:
                #increment i by 1
                #decrement j by 1
                i += 1
                j -= 1
                
        return True
        """
        :type x: int
        :rtype: bool
        """
        
